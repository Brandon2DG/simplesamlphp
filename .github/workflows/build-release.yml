---

name: Build release

on:  # yamllint disable-line rule:truthy
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build release
    runs-on: [ubuntu-latest]
    strategy:
      fail-fast: false
      matrix:
        version: ['slim', 'full']
        include:
          - version: slim
            modules: []
          - version: full
            modules: [
              module: {name: 'simplesamlphp/simplesamlphp-module-authorize', version: '^1.2'},
              module: {name: 'simplesamlphp/simplesamlphp-module-consent', version: '^1.2'},
              module: {name: 'simplesamlphp/simplesamlphp-module-consentadmin', version: '^1.0'},
              module: {name: 'simplesamlphp/simplesamlphp-module-discopower', version: '^1.3'},
              module: {name: 'simplesamlphp/simplesamlphp-module-ldap', version: '^2.1'},
              module: {name: 'simplesamlphp/simplesamlphp-module-metarefresh', version: '^1.1'},
              module: {name: 'simplesamlphp/simplesamlphp-module-radius', version: '^2.0'},
              module: {name: 'simplesamlphp/simplesamlphp-module-statictics', version: '^1.1'},
              module: {name: 'simplesamlphp/simplesamlphp-module-sqlauth', version: '^1.0'}
            ]

    steps:
      - name: Setup PHP, with composer and extensions
        id: setup-php
        # https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          # Should match the minimum required version for SimpleSAMLphp
          php-version: '8.0'
          tools: composer:v2
          extensions: ldap, krb5, mbstring, xml
          coverage: none

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - uses: actions/checkout@v3

      # Store the version, stripping any v-prefix
      - name: Write release version
        run: |
          TAG="${{ github.ref_name }}"
          echo "VERSION=${TAG#v}" >> "$GITHUB_ENV"
          echo "COMPOSER_VERSION=$(composer config version)" >> "$GITHUB_ENV"

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Make sure a version is set in composer.json that matches the tag
        if: "${{ env.COMPOSER_VERSION !=  env.VERSION }}"
        run: exit 1

      - name: Install Composer dependencies
        run: composer install --no-progress --no-dev --prefer-dist --optimize-autoloader

      - name: Install SimpleSAMLphp modules
        if: toJSON(matrix.modules) != '[]'
        run: |
          for module in $(echo $matrix.modules | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
            export $s
          done

#          composer require $MODULE_NAME:$MODULE_VERSION --update-no-dev

      - name: Clean release
        run: |
          grep export-ignore .gitattributes | cut -d ' ' -f 1 | while IFS= read -r line
          do
            rm -rf "$line"
          done
          rm -rf .git

      - name: Build tarball
        run: |
          cd ..
          cp -R  simplesamlphp "simplesamlphp-$VERSION"
          tar --owner 0 --group 0 -cvzf "/tmp/simplesamlphp-$VERSION-${{ matrix.version }}.tar.gz" \
          "simplesamlphp-$VERSION"
          rm -rf "simplesamlphp-$VERSION"

      - name: Save tarball
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.version }}
          path: "/tmp/simplesamlphp-${{ env.VERSION }}-${{ matrix.version }}.tar.gz"
          retention-days: 1

      - name: Calculate SHA checksum (${{ matrix.version }})
        run: sha256sum "/tmp/simplesamlphp-$VERSION-${{ matrix.version }}.tar.gz"
